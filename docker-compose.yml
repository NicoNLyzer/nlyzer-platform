version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: nlyzer_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Qdrant Vector Database
  qdrant:
    image: qdrant/qdrant:latest
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  # NLyzer API - Control Plane
  nlyzer-api:
    build:
      context: ./nlyzer_api
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@postgres:5432/nlyzer_db
      - REDIS_URL=redis://redis:6379/0
      - QDRANT_URL=http://qdrant:6333
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      qdrant:
        condition: service_healthy
    volumes:
      - ./nlyzer_api:/home/appuser/app
    command: uvicorn nlyzer.main:app --host 0.0.0.0 --port 8000 --reload

  # NLWeb Extension - AI Engine
  nlweb-extension:
    build:
      context: ./nlweb_extension
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    environment:
      - WEAVIATE_URL=http://qdrant:6333
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    env_file:
      - .env
    depends_on:
      - qdrant
    volumes:
      - ./nlweb_extension:/home/appuser/app
    # Placeholder command - will be updated when NLWeb is integrated
    command: python -c "import time; print('NLWeb Extension placeholder'); time.sleep(3600)"

volumes:
  postgres_data:
  redis_data:
  qdrant_data:

networks:
  default:
    name: nlyzer-network